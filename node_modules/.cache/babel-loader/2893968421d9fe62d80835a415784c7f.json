{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/uchennaibe/Downloads/youtube-clone-react-redux/src/components/comments/Comments.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addComment, getCommentsOfVideoById } from '../../redux/actions/comments.action';\nimport Comment from '../comment/Comment';\nimport './_comments.scss';\n\nconst Comments = ({\n  videoId,\n  totalComments\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getCommentsOfVideoById(videoId));\n  }, [videoId, dispatch]);\n  const comments = useSelector(state => state.commentList.comments);\n  const {\n    photoURL\n  } = useSelector(state => {\n    var _state$auth;\n\n    return (_state$auth = state.auth) === null || _state$auth === void 0 ? void 0 : _state$auth.user;\n  });\n  const [text, setText] = useState('');\n\n  const _comments = comments === null || comments === void 0 ? void 0 : comments.map(comment => comment.snippet.topLevelComment.snippet);\n\n  const handleComment = e => {\n    e.preventDefault();\n    if (text.length === 0) return;\n    dispatch(addComment(videoId, text));\n    setText('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [totalComments, \" Comments\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-2 comments__form d-flex w-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: photoURL,\n        alt: \"avatar\",\n        className: \"mr-3 rounded-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleComment,\n        className: \"d-flex flex-grow-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"flex-grow-1\",\n          placeholder: \"Write a comment...\",\n          value: text,\n          onChange: e => setText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"p-2 border-0\",\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments__list\",\n      children: _comments === null || _comments === void 0 ? void 0 : _comments.map((comment, i) => /*#__PURE__*/_jsxDEV(Comment, {\n        comment: comment\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 16\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Comments, \"FqZjrH2AG1RoivNxim7RPHa7Gg8=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/Users/uchennaibe/Downloads/youtube-clone-react-redux/src/components/comments/Comments.js"],"names":["React","useEffect","useState","useDispatch","useSelector","addComment","getCommentsOfVideoById","Comment","Comments","videoId","totalComments","dispatch","comments","state","commentList","photoURL","auth","user","text","setText","_comments","map","comment","snippet","topLevelComment","handleComment","e","preventDefault","length","target","value","i"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACGC,UADH,EAEGC,sBAFH,QAGO,qCAHP;AAIA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAO,kBAAP;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAgC;AAAA;;AAC9C,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACbU,IAAAA,QAAQ,CAACL,sBAAsB,CAACG,OAAD,CAAvB,CAAR;AACF,GAFQ,EAEN,CAACA,OAAD,EAAUE,QAAV,CAFM,CAAT;AAIA,QAAMC,QAAQ,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,WAAN,CAAkBF,QAA5B,CAA5B;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAeX,WAAW,CAACS,KAAK;AAAA;;AAAA,0BAAIA,KAAK,CAACG,IAAV,gDAAI,YAAYC,IAAhB;AAAA,GAAN,CAAhC;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMkB,SAAS,GAAGR,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAES,GAAV,CACfC,OAAO,IAAIA,OAAO,CAACC,OAAR,CAAgBC,eAAhB,CAAgCD,OAD5B,CAAlB;;AAIA,QAAME,aAAa,GAAGC,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIT,IAAI,CAACU,MAAL,KAAgB,CAApB,EAAuB;AAEvBjB,IAAAA,QAAQ,CAACN,UAAU,CAACI,OAAD,EAAUS,IAAV,CAAX,CAAR;AAEAC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACF,GAPD;;AAQA,sBACG;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACG;AAAA,iBAAIT,aAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eAEG;AAAK,MAAA,SAAS,EAAC,kCAAf;AAAA,8BACG;AAAK,QAAA,GAAG,EAAEK,QAAV;AAAoB,QAAA,GAAG,EAAC,QAAxB;AAAiC,QAAA,SAAS,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,cADH,eAEG;AAAM,QAAA,QAAQ,EAAEU,aAAhB;AAA+B,QAAA,SAAS,EAAC,oBAAzC;AAAA,gCACG;AACG,UAAA,IAAI,EAAC,MADR;AAEG,UAAA,SAAS,EAAC,aAFb;AAGG,UAAA,WAAW,EAAC,oBAHf;AAIG,UAAA,KAAK,EAAEP,IAJV;AAKG,UAAA,QAAQ,EAAEQ,CAAC,IAAIP,OAAO,CAACO,CAAC,CAACG,MAAF,CAASC,KAAV;AALzB;AAAA;AAAA;AAAA;AAAA,gBADH,eAQG;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARH;AAAA;AAAA;AAAA;AAAA;AAAA,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YAFH,eAeG;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBACIV,SADJ,aACIA,SADJ,uBACIA,SAAS,CAAEC,GAAX,CAAe,CAACC,OAAD,EAAUS,CAAV,kBACb,QAAC,OAAD;AAAS,QAAA,OAAO,EAAET;AAAlB,SAAgCS,CAAhC;AAAA;AAAA;AAAA;AAAA,cADF;AADJ;AAAA;AAAA;AAAA;AAAA,YAfH;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAuBF,CA/CD;;GAAMvB,Q;UACcL,W,EAMAC,W,EACIA,W;;;KARlBI,Q;AAiDN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n   addComment,\n   getCommentsOfVideoById,\n} from '../../redux/actions/comments.action'\nimport Comment from '../comment/Comment'\nimport './_comments.scss'\nconst Comments = ({ videoId, totalComments }) => {\n   const dispatch = useDispatch()\n\n   useEffect(() => {\n      dispatch(getCommentsOfVideoById(videoId))\n   }, [videoId, dispatch])\n\n   const comments = useSelector(state => state.commentList.comments)\n   const { photoURL } = useSelector(state => state.auth?.user)\n\n   const [text, setText] = useState('')\n\n   const _comments = comments?.map(\n      comment => comment.snippet.topLevelComment.snippet\n   )\n\n   const handleComment = e => {\n      e.preventDefault()\n      if (text.length === 0) return\n\n      dispatch(addComment(videoId, text))\n\n      setText('')\n   }\n   return (\n      <div className='comments'>\n         <p>{totalComments} Comments</p>\n         <div className='my-2 comments__form d-flex w-100'>\n            <img src={photoURL} alt='avatar' className='mr-3 rounded-circle' />\n            <form onSubmit={handleComment} className='d-flex flex-grow-1'>\n               <input\n                  type='text'\n                  className='flex-grow-1'\n                  placeholder='Write a comment...'\n                  value={text}\n                  onChange={e => setText(e.target.value)}\n               />\n               <button className='p-2 border-0'>Comment</button>\n            </form>\n         </div>\n         <div className='comments__list'>\n            {_comments?.map((comment, i) => (\n               <Comment comment={comment} key={i} />\n            ))}\n         </div>\n      </div>\n   )\n}\n\nexport default Comments\n"]},"metadata":{},"sourceType":"module"}