{"ast":null,"code":"import firebase from 'firebase/app';\nimport auth from '../../firebase';\nimport { LOAD_PROFILE, LOGIN_FAIL, LOGIN_REQUEST, LOGIN_SUCCESS, LOG_OUT } from '../actionType';\nexport const login = () => async dispatch => {\n  try {\n    dispatch({\n      type: LOGIN_REQUEST\n    });\n    const provider = new firebase.auth.GoogleAuthProvider();\n    provider.addScope('https://www.googleapis.com/auth/youtube.force-ssl');\n    const res = await auth.signInWithPopup(provider);\n    const accessToken = res.credential.accessToken;\n    const profile = {\n      name: res.additionalUserInfo.profile.name,\n      photoURL: res.additionalUserInfo.profile.picture\n    };\n    sessionStorage.setItem('ytc-access-token', accessToken);\n    sessionStorage.setItem('ytc-user', JSON.stringify(profile));\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: accessToken\n    });\n    dispatch({\n      type: LOAD_PROFILE,\n      payload: profile\n    });\n  } catch (error) {\n    console.log(error.message);\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const log_out = () => async dispatch => {\n  await auth.signOut();\n  dispatch({\n    type: LOG_OUT\n  });\n  sessionStorage.removeItem('ytc-access-token');\n  sessionStorage.removeItem('ytc-user');\n};","map":{"version":3,"sources":["/Users/uchennaibe/Downloads/youtube-clone-react-redux/src/redux/actions/auth.action.js"],"names":["firebase","auth","LOAD_PROFILE","LOGIN_FAIL","LOGIN_REQUEST","LOGIN_SUCCESS","LOG_OUT","login","dispatch","type","provider","GoogleAuthProvider","addScope","res","signInWithPopup","accessToken","credential","profile","name","additionalUserInfo","photoURL","picture","sessionStorage","setItem","JSON","stringify","payload","error","console","log","message","log_out","signOut","removeItem"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AAEA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,SACGC,YADH,EAEGC,UAFH,EAGGC,aAHH,EAIGC,aAJH,EAKGC,OALH,QAMO,eANP;AAQA,OAAO,MAAMC,KAAK,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC1C,MAAI;AACDA,IAAAA,QAAQ,CAAC;AACNC,MAAAA,IAAI,EAAEL;AADA,KAAD,CAAR;AAIA,UAAMM,QAAQ,GAAG,IAAIV,QAAQ,CAACC,IAAT,CAAcU,kBAAlB,EAAjB;AACAD,IAAAA,QAAQ,CAACE,QAAT,CAAkB,mDAAlB;AAEA,UAAMC,GAAG,GAAG,MAAMZ,IAAI,CAACa,eAAL,CAAqBJ,QAArB,CAAlB;AACA,UAAMK,WAAW,GAAGF,GAAG,CAACG,UAAJ,CAAeD,WAAnC;AAEA,UAAME,OAAO,GAAG;AACbC,MAAAA,IAAI,EAAEL,GAAG,CAACM,kBAAJ,CAAuBF,OAAvB,CAA+BC,IADxB;AAEbE,MAAAA,QAAQ,EAAEP,GAAG,CAACM,kBAAJ,CAAuBF,OAAvB,CAA+BI;AAF5B,KAAhB;AAKAC,IAAAA,cAAc,CAACC,OAAf,CAAuB,kBAAvB,EAA2CR,WAA3C;AACAO,IAAAA,cAAc,CAACC,OAAf,CAAuB,UAAvB,EAAmCC,IAAI,CAACC,SAAL,CAAeR,OAAf,CAAnC;AAEAT,IAAAA,QAAQ,CAAC;AACNC,MAAAA,IAAI,EAAEJ,aADA;AAENqB,MAAAA,OAAO,EAAEX;AAFH,KAAD,CAAR;AAIAP,IAAAA,QAAQ,CAAC;AACNC,MAAAA,IAAI,EAAEP,YADA;AAENwB,MAAAA,OAAO,EAAET;AAFH,KAAD,CAAR;AAIF,GA3BD,CA2BE,OAAOU,KAAP,EAAc;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACAtB,IAAAA,QAAQ,CAAC;AACNC,MAAAA,IAAI,EAAEN,UADA;AAENuB,MAAAA,OAAO,EAAEC,KAAK,CAACG;AAFT,KAAD,CAAR;AAIF;AACH,CAnCM;AAqCP,OAAO,MAAMC,OAAO,GAAG,MAAM,MAAMvB,QAAN,IAAkB;AAC5C,QAAMP,IAAI,CAAC+B,OAAL,EAAN;AACAxB,EAAAA,QAAQ,CAAC;AACNC,IAAAA,IAAI,EAAEH;AADA,GAAD,CAAR;AAIAgB,EAAAA,cAAc,CAACW,UAAf,CAA0B,kBAA1B;AACAX,EAAAA,cAAc,CAACW,UAAf,CAA0B,UAA1B;AACF,CARM","sourcesContent":["import firebase from 'firebase/app'\n\nimport auth from '../../firebase'\nimport {\n   LOAD_PROFILE,\n   LOGIN_FAIL,\n   LOGIN_REQUEST,\n   LOGIN_SUCCESS,\n   LOG_OUT,\n} from '../actionType'\n\nexport const login = () => async dispatch => {\n   try {\n      dispatch({\n         type: LOGIN_REQUEST,\n      })\n\n      const provider = new firebase.auth.GoogleAuthProvider()\n      provider.addScope('https://www.googleapis.com/auth/youtube.force-ssl')\n\n      const res = await auth.signInWithPopup(provider)\n      const accessToken = res.credential.accessToken\n\n      const profile = {\n         name: res.additionalUserInfo.profile.name,\n         photoURL: res.additionalUserInfo.profile.picture,\n      }\n\n      sessionStorage.setItem('ytc-access-token', accessToken)\n      sessionStorage.setItem('ytc-user', JSON.stringify(profile))\n\n      dispatch({\n         type: LOGIN_SUCCESS,\n         payload: accessToken,\n      })\n      dispatch({\n         type: LOAD_PROFILE,\n         payload: profile,\n      })\n   } catch (error) {\n      console.log(error.message)\n      dispatch({\n         type: LOGIN_FAIL,\n         payload: error.message,\n      })\n   }\n}\n\nexport const log_out = () => async dispatch => {\n   await auth.signOut()\n   dispatch({\n      type: LOG_OUT,\n   })\n\n   sessionStorage.removeItem('ytc-access-token')\n   sessionStorage.removeItem('ytc-user')\n}\n"]},"metadata":{},"sourceType":"module"}