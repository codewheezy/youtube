{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import{useEffect}from'react';import{Container}from'react-bootstrap';import Skeleton,{SkeletonTheme}from'react-loading-skeleton';import{useDispatch,useSelector}from'react-redux';import VideoHorizontal from'../../components/videoHorizontal/VideoHorizontal';import{getSubscribedChannels}from'../../redux/actions/videos.action';import'./subscriptions.scss';var SubscriptionsScreen=function SubscriptionsScreen(){var dispatch=useDispatch();useEffect(function(){dispatch(getSubscribedChannels());},[dispatch]);var _useSelector=useSelector(function(state){return state.subscriptionsChannel;}),loading=_useSelector.loading,videos=_useSelector.videos;return/*#__PURE__*/_jsx(Container,{fluid:true,children:!loading?videos===null||videos===void 0?void 0:videos.map(function(video){return/*#__PURE__*/_jsx(VideoHorizontal,{video:video,subScreen:true},video.id);}):/*#__PURE__*/_jsx(SkeletonTheme,{color:\"#343a40\",highlightColor:\"#3c4147\",children:/*#__PURE__*/_jsx(Skeleton,{width:\"100%\",height:\"160px\",count:20})})});};export default SubscriptionsScreen;","map":{"version":3,"sources":["/Users/uchennaibe/Desktop/youtube/src/screens/subscriptionsScreen/SubscriptionsScreen.js"],"names":["useEffect","Container","Skeleton","SkeletonTheme","useDispatch","useSelector","VideoHorizontal","getSubscribedChannels","SubscriptionsScreen","dispatch","state","subscriptionsChannel","loading","videos","map","video","id"],"mappings":"2CAAA,OAASA,SAAT,KAA0B,OAA1B,CACA,OAASC,SAAT,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,QAAP,EAAmBC,aAAnB,KAAwC,wBAAxC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,eAAP,KAA4B,kDAA5B,CACA,OAASC,qBAAT,KAAsC,mCAAtC,CACA,MAAO,sBAAP,CAEA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,CAC/B,GAAMC,CAAAA,QAAQ,CAAGL,WAAW,EAA5B,CAEAJ,SAAS,CAAC,UAAM,CACbS,QAAQ,CAACF,qBAAqB,EAAtB,CAAR,CACF,CAFQ,CAEN,CAACE,QAAD,CAFM,CAAT,CAH+B,iBAOHJ,WAAW,CAAC,SAAAK,KAAK,QAAIA,CAAAA,KAAK,CAACC,oBAAV,EAAN,CAPR,CAOvBC,OAPuB,cAOvBA,OAPuB,CAOdC,MAPc,cAOdA,MAPc,CAS/B,mBACG,KAAC,SAAD,EAAW,KAAK,KAAhB,UACI,CAACD,OAAD,CACEC,MADF,SACEA,MADF,iBACEA,MAAM,CAAEC,GAAR,CAAY,SAAAC,KAAK,qBACd,KAAC,eAAD,EAAiB,KAAK,CAAEA,KAAxB,CAA8C,SAAS,KAAvD,EAAoCA,KAAK,CAACC,EAA1C,CADc,EAAjB,CADF,cAKE,KAAC,aAAD,EAAe,KAAK,CAAC,SAArB,CAA+B,cAAc,CAAC,SAA9C,uBACG,KAAC,QAAD,EAAU,KAAK,CAAC,MAAhB,CAAuB,MAAM,CAAC,OAA9B,CAAsC,KAAK,CAAE,EAA7C,EADH,EANN,EADH,CAaF,CAtBD,CAwBA,cAAeR,CAAAA,mBAAf","sourcesContent":["import { useEffect } from 'react'\nimport { Container } from 'react-bootstrap'\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton'\nimport { useDispatch, useSelector } from 'react-redux'\nimport VideoHorizontal from '../../components/videoHorizontal/VideoHorizontal'\nimport { getSubscribedChannels } from '../../redux/actions/videos.action'\nimport './subscriptions.scss'\n\nconst SubscriptionsScreen = () => {\n   const dispatch = useDispatch()\n\n   useEffect(() => {\n      dispatch(getSubscribedChannels())\n   }, [dispatch])\n\n   const { loading, videos } = useSelector(state => state.subscriptionsChannel)\n\n   return (\n      <Container fluid>\n         {!loading ? (\n            videos?.map(video => (\n               <VideoHorizontal video={video} key={video.id} subScreen />\n            ))\n         ) : (\n            <SkeletonTheme color='#343a40' highlightColor='#3c4147'>\n               <Skeleton width='100%' height='160px' count={20} />\n            </SkeletonTheme>\n         )}\n      </Container>\n   )\n}\n\nexport default SubscriptionsScreen\n"]},"metadata":{},"sourceType":"module"}