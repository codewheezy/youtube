{"ast":null,"code":"import _toConsumableArray from\"/Users/uchennaibe/Desktop/youtube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{useEffect}from'react';import{Col,Container,Row}from'react-bootstrap';import Skeleton,{SkeletonTheme}from'react-loading-skeleton';import{useDispatch,useSelector}from'react-redux';import{useParams}from'react-router-dom';import Video from'../../components/video/Video';import{getChannelDetails}from'../../redux/actions/channel.action';import{getVideosByChannel}from'../../redux/actions/videos.action';import numeral from'numeral';import'./channelScreen.scss';var ChannelScreen=function ChannelScreen(){var _snippet$thumbnails,_snippet$thumbnails$d;var _useParams=useParams(),channelId=_useParams.channelId;var dispatch=useDispatch();useEffect(function(){dispatch(getVideosByChannel(channelId));dispatch(getChannelDetails(channelId));},[dispatch,channelId]);var _useSelector=useSelector(function(state){return state.channelVideos;}),videos=_useSelector.videos,loading=_useSelector.loading;var _useSelector2=useSelector(function(state){return state.channelDetails.channel;}),snippet=_useSelector2.snippet,statistics=_useSelector2.statistics;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"px-5 py-2 my-2 d-flex justify-content-between align-items-center channelHeader\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center\",children:[/*#__PURE__*/_jsx(\"img\",{src:snippet===null||snippet===void 0?void 0:(_snippet$thumbnails=snippet.thumbnails)===null||_snippet$thumbnails===void 0?void 0:(_snippet$thumbnails$d=_snippet$thumbnails.default)===null||_snippet$thumbnails$d===void 0?void 0:_snippet$thumbnails$d.url,alt:\"\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml-3 channelHeader__details\",children:[/*#__PURE__*/_jsx(\"h3\",{children:snippet===null||snippet===void 0?void 0:snippet.title}),/*#__PURE__*/_jsxs(\"span\",{children:[numeral(statistics===null||statistics===void 0?void 0:statistics.subscriberCount).format('0.a'),' ',\"subscribers\"]})]})]}),/*#__PURE__*/_jsx(\"button\",{children:\"Subscribe\"})]}),/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(Row,{className:\"mt-2\",children:!loading?videos===null||videos===void 0?void 0:videos.map(function(video){return/*#__PURE__*/_jsx(Col,{md:3,lg:3,children:/*#__PURE__*/_jsx(Video,{video:video,channelScreen:true})});}):_toConsumableArray(Array(15)).map(function(){return/*#__PURE__*/_jsx(Col,{md:3,lg:3,children:/*#__PURE__*/_jsx(SkeletonTheme,{color:\"#343a40\",highlightColor:\"#3c4147\",children:/*#__PURE__*/_jsx(Skeleton,{width:\"100%\",height:\"140px\"})})});})})})]});};export default ChannelScreen;","map":{"version":3,"sources":["/Users/uchennaibe/Desktop/youtube/src/screens/channelScreen/ChannelScreen.js"],"names":["useEffect","Col","Container","Row","Skeleton","SkeletonTheme","useDispatch","useSelector","useParams","Video","getChannelDetails","getVideosByChannel","numeral","ChannelScreen","channelId","dispatch","state","channelVideos","videos","loading","channelDetails","channel","snippet","statistics","thumbnails","default","url","title","subscriberCount","format","map","video","Array"],"mappings":"6SAAA,OAASA,SAAT,KAA0B,OAA1B,CACA,OAASC,GAAT,CAAcC,SAAd,CAAyBC,GAAzB,KAAoC,iBAApC,CACA,MAAOC,CAAAA,QAAP,EAAmBC,aAAnB,KAAwC,wBAAxC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,SAAT,KAA0B,kBAA1B,CACA,MAAOC,CAAAA,KAAP,KAAkB,8BAAlB,CACA,OAASC,iBAAT,KAAkC,oCAAlC,CACA,OAASC,kBAAT,KAAmC,mCAAnC,CAEA,MAAOC,CAAAA,OAAP,KAAoB,SAApB,CAEA,MAAO,sBAAP,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,8DACHL,SAAS,EADN,CACjBM,SADiB,YACjBA,SADiB,CAGzB,GAAMC,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CAEAN,SAAS,CAAC,UAAM,CACbe,QAAQ,CAACJ,kBAAkB,CAACG,SAAD,CAAnB,CAAR,CACAC,QAAQ,CAACL,iBAAiB,CAACI,SAAD,CAAlB,CAAR,CACF,CAHQ,CAGN,CAACC,QAAD,CAAWD,SAAX,CAHM,CAAT,CALyB,iBAUGP,WAAW,CAAC,SAAAS,KAAK,QAAIA,CAAAA,KAAK,CAACC,aAAV,EAAN,CAVd,CAUjBC,MAViB,cAUjBA,MAViB,CAUTC,OAVS,cAUTA,OAVS,mBAWOZ,WAAW,CACxC,SAAAS,KAAK,QAAIA,CAAAA,KAAK,CAACI,cAAN,CAAqBC,OAAzB,EADmC,CAXlB,CAWjBC,OAXiB,eAWjBA,OAXiB,CAWRC,UAXQ,eAWRA,UAXQ,CAezB,mBACG,wCACG,aAAK,SAAS,CAAC,gFAAf,wBACG,aAAK,SAAS,CAAC,2BAAf,wBACG,YAAK,GAAG,CAAED,OAAF,SAAEA,OAAF,sCAAEA,OAAO,CAAEE,UAAX,qEAAE,oBAAqBC,OAAvB,gDAAE,sBAA8BC,GAAxC,CAA6C,GAAG,CAAC,EAAjD,EADH,cAGG,aAAK,SAAS,CAAC,6BAAf,wBACG,oBAAKJ,OAAL,SAAKA,OAAL,iBAAKA,OAAO,CAAEK,KAAd,EADH,cAEG,wBACIf,OAAO,CAACW,UAAD,SAACA,UAAD,iBAACA,UAAU,CAAEK,eAAb,CAAP,CAAqCC,MAArC,CAA4C,KAA5C,CADJ,CACwD,GADxD,iBAFH,GAHH,GADH,cAaG,qCAbH,GADH,cAiBG,KAAC,SAAD,wBACG,KAAC,GAAD,EAAK,SAAS,CAAC,MAAf,UACI,CAACV,OAAD,CACID,MADJ,SACIA,MADJ,iBACIA,MAAM,CAAEY,GAAR,CAAY,SAAAC,KAAK,qBACd,KAAC,GAAD,EAAK,EAAE,CAAE,CAAT,CAAY,EAAE,CAAE,CAAhB,uBACG,KAAC,KAAD,EAAO,KAAK,CAAEA,KAAd,CAAqB,aAAa,KAAlC,EADH,EADc,EAAjB,CADJ,CAMI,mBAAIC,KAAK,CAAC,EAAD,CAAT,EAAeF,GAAf,CAAmB,8BAChB,KAAC,GAAD,EAAK,EAAE,CAAE,CAAT,CAAY,EAAE,CAAE,CAAhB,uBACG,KAAC,aAAD,EACG,KAAK,CAAC,SADT,CAEG,cAAc,CAAC,SAFlB,uBAGG,KAAC,QAAD,EAAU,KAAK,CAAC,MAAhB,CAAuB,MAAM,CAAC,OAA9B,EAHH,EADH,EADgB,EAAnB,CAPR,EADH,EAjBH,GADH,CAuCF,CAtDD,CAwDA,cAAejB,CAAAA,aAAf","sourcesContent":["import { useEffect } from 'react'\nimport { Col, Container, Row } from 'react-bootstrap'\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams } from 'react-router-dom'\nimport Video from '../../components/video/Video'\nimport { getChannelDetails } from '../../redux/actions/channel.action'\nimport { getVideosByChannel } from '../../redux/actions/videos.action'\n\nimport numeral from 'numeral'\n\nimport './channelScreen.scss'\n\nconst ChannelScreen = () => {\n   const { channelId } = useParams()\n\n   const dispatch = useDispatch()\n\n   useEffect(() => {\n      dispatch(getVideosByChannel(channelId))\n      dispatch(getChannelDetails(channelId))\n   }, [dispatch, channelId])\n\n   const { videos, loading } = useSelector(state => state.channelVideos)\n   const { snippet, statistics } = useSelector(\n      state => state.channelDetails.channel\n   )\n\n   return (\n      <>\n         <div className='px-5 py-2 my-2 d-flex justify-content-between align-items-center channelHeader'>\n            <div className='d-flex align-items-center'>\n               <img src={snippet?.thumbnails?.default?.url} alt='' />\n\n               <div className='ml-3 channelHeader__details'>\n                  <h3>{snippet?.title}</h3>\n                  <span>\n                     {numeral(statistics?.subscriberCount).format('0.a')}{' '}\n                     subscribers\n                  </span>\n               </div>\n            </div>\n\n            <button>Subscribe</button>\n         </div>\n\n         <Container>\n            <Row className='mt-2'>\n               {!loading\n                  ? videos?.map(video => (\n                       <Col md={3} lg={3}>\n                          <Video video={video} channelScreen />\n                       </Col>\n                    ))\n                  : [...Array(15)].map(() => (\n                       <Col md={3} lg={3}>\n                          <SkeletonTheme\n                             color='#343a40'\n                             highlightColor='#3c4147'>\n                             <Skeleton width='100%' height='140px' />\n                          </SkeletonTheme>\n                       </Col>\n                    ))}\n            </Row>\n         </Container>\n      </>\n   )\n}\n\nexport default ChannelScreen\n"]},"metadata":{},"sourceType":"module"}