{"ast":null,"code":"import request from '../../api';\nimport { COMMENT_LIST_FAIL, COMMENT_LIST_REQUEST, COMMENT_LIST_SUCCESS, CREATE_COMMENT_FAIL, CREATE_COMMENT_SUCCESS } from '../actionType';\nexport const getCommentsOfVideoById = id => async dispatch => {\n  try {\n    dispatch({\n      type: COMMENT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await request('/commentThreads', {\n      params: {\n        part: 'snippet',\n        videoId: id\n      }\n    });\n    dispatch({\n      type: COMMENT_LIST_SUCCESS,\n      payload: data.items\n    });\n  } catch (error) {\n    console.log(error.response.data);\n    dispatch({\n      type: COMMENT_LIST_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const addComment = (id, text) => async (dispatch, getState) => {\n  try {\n    const obj = {\n      snippet: {\n        videoId: id,\n        topLevelComment: {\n          snippet: {\n            textOriginal: text\n          }\n        }\n      }\n    };\n    await request.post('/commentThreads', obj, {\n      params: {\n        part: 'snippet'\n      },\n      headers: {\n        Authorization: `Bearer ${getState().auth.accessToken}`\n      }\n    });\n    dispatch({\n      type: CREATE_COMMENT_SUCCESS\n    });\n    setTimeout(() => dispatch(getCommentsOfVideoById(id)), 3000);\n  } catch (error) {\n    console.log(error.response.data);\n    dispatch({\n      type: CREATE_COMMENT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/uchennaibe/Desktop/youtube/src/redux/actions/comments.action.js"],"names":["request","COMMENT_LIST_FAIL","COMMENT_LIST_REQUEST","COMMENT_LIST_SUCCESS","CREATE_COMMENT_FAIL","CREATE_COMMENT_SUCCESS","getCommentsOfVideoById","id","dispatch","type","data","params","part","videoId","payload","items","error","console","log","response","message","addComment","text","getState","obj","snippet","topLevelComment","textOriginal","post","headers","Authorization","auth","accessToken","setTimeout"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,SACGC,iBADH,EAEGC,oBAFH,EAGGC,oBAHH,EAIGC,mBAJH,EAKGC,sBALH,QAMO,eANP;AAQA,OAAO,MAAMC,sBAAsB,GAAGC,EAAE,IAAI,MAAMC,QAAN,IAAkB;AAC3D,MAAI;AACDA,IAAAA,QAAQ,CAAC;AACNC,MAAAA,IAAI,EAAEP;AADA,KAAD,CAAR;AAIA,UAAM;AAAEQ,MAAAA;AAAF,QAAW,MAAMV,OAAO,CAAC,iBAAD,EAAoB;AAC/CW,MAAAA,MAAM,EAAE;AACLC,QAAAA,IAAI,EAAE,SADD;AAELC,QAAAA,OAAO,EAAEN;AAFJ;AADuC,KAApB,CAA9B;AAMAC,IAAAA,QAAQ,CAAC;AACNC,MAAAA,IAAI,EAAEN,oBADA;AAENW,MAAAA,OAAO,EAAEJ,IAAI,CAACK;AAFR,KAAD,CAAR;AAIF,GAfD,CAeE,OAAOC,KAAP,EAAc;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAN,CAAeT,IAA3B;AACAF,IAAAA,QAAQ,CAAC;AACNC,MAAAA,IAAI,EAAER,iBADA;AAENa,MAAAA,OAAO,EAAEE,KAAK,CAACG,QAAN,CAAeT,IAAf,CAAoBU;AAFvB,KAAD,CAAR;AAIF;AACH,CAvBM;AAyBP,OAAO,MAAMC,UAAU,GAAG,CAACd,EAAD,EAAKe,IAAL,KAAc,OAAOd,QAAP,EAAiBe,QAAjB,KAA8B;AACnE,MAAI;AACD,UAAMC,GAAG,GAAG;AACTC,MAAAA,OAAO,EAAE;AACNZ,QAAAA,OAAO,EAAEN,EADH;AAENmB,QAAAA,eAAe,EAAE;AACdD,UAAAA,OAAO,EAAE;AACNE,YAAAA,YAAY,EAAEL;AADR;AADK;AAFX;AADA,KAAZ;AAWA,UAAMtB,OAAO,CAAC4B,IAAR,CAAa,iBAAb,EAAgCJ,GAAhC,EAAqC;AACxCb,MAAAA,MAAM,EAAE;AACLC,QAAAA,IAAI,EAAE;AADD,OADgC;AAIxCiB,MAAAA,OAAO,EAAE;AACNC,QAAAA,aAAa,EAAG,UAASP,QAAQ,GAAGQ,IAAX,CAAgBC,WAAY;AAD/C;AAJ+B,KAArC,CAAN;AAQAxB,IAAAA,QAAQ,CAAC;AACNC,MAAAA,IAAI,EAAEJ;AADA,KAAD,CAAR;AAIA4B,IAAAA,UAAU,CAAC,MAAMzB,QAAQ,CAACF,sBAAsB,CAACC,EAAD,CAAvB,CAAf,EAA6C,IAA7C,CAAV;AACF,GAzBD,CAyBE,OAAOS,KAAP,EAAc;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAN,CAAeT,IAA3B;AACAF,IAAAA,QAAQ,CAAC;AACNC,MAAAA,IAAI,EAAEL,mBADA;AAENU,MAAAA,OAAO,EAAEE,KAAK,CAACG,QAAN,CAAeT,IAAf,CAAoBU;AAFvB,KAAD,CAAR;AAIF;AACH,CAjCM","sourcesContent":["import request from '../../api'\nimport {\n   COMMENT_LIST_FAIL,\n   COMMENT_LIST_REQUEST,\n   COMMENT_LIST_SUCCESS,\n   CREATE_COMMENT_FAIL,\n   CREATE_COMMENT_SUCCESS,\n} from '../actionType'\n\nexport const getCommentsOfVideoById = id => async dispatch => {\n   try {\n      dispatch({\n         type: COMMENT_LIST_REQUEST,\n      })\n\n      const { data } = await request('/commentThreads', {\n         params: {\n            part: 'snippet',\n            videoId: id,\n         },\n      })\n      dispatch({\n         type: COMMENT_LIST_SUCCESS,\n         payload: data.items,\n      })\n   } catch (error) {\n      console.log(error.response.data)\n      dispatch({\n         type: COMMENT_LIST_FAIL,\n         payload: error.response.data.message,\n      })\n   }\n}\n\nexport const addComment = (id, text) => async (dispatch, getState) => {\n   try {\n      const obj = {\n         snippet: {\n            videoId: id,\n            topLevelComment: {\n               snippet: {\n                  textOriginal: text,\n               },\n            },\n         },\n      }\n\n      await request.post('/commentThreads', obj, {\n         params: {\n            part: 'snippet',\n         },\n         headers: {\n            Authorization: `Bearer ${getState().auth.accessToken}`,\n         },\n      })\n      dispatch({\n         type: CREATE_COMMENT_SUCCESS,\n      })\n\n      setTimeout(() => dispatch(getCommentsOfVideoById(id)), 3000)\n   } catch (error) {\n      console.log(error.response.data)\n      dispatch({\n         type: CREATE_COMMENT_FAIL,\n         payload: error.response.data.message,\n      })\n   }\n}\n"]},"metadata":{},"sourceType":"module"}