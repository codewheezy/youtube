{"ast":null,"code":"import _regeneratorRuntime from\"/Users/uchennaibe/Desktop/youtube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/uchennaibe/Desktop/youtube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/uchennaibe/Desktop/youtube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useEffect,useState}from'react';import'./_video.scss';import{AiFillEye}from'react-icons/ai';import request from'../../api';import moment from'moment';import numeral from'numeral';import{LazyLoadImage}from'react-lazy-load-image-component';import{useHistory}from'react-router-dom';var Video=function Video(_ref){var video=_ref.video,channelScreen=_ref.channelScreen;var id=video.id,_video$snippet=video.snippet,channelId=_video$snippet.channelId,channelTitle=_video$snippet.channelTitle,title=_video$snippet.title,publishedAt=_video$snippet.publishedAt,medium=_video$snippet.thumbnails.medium,contentDetails=video.contentDetails;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),views=_useState2[0],setViews=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),duration=_useState4[0],setDuration=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),channelIcon=_useState6[0],setChannelIcon=_useState6[1];var seconds=moment.duration(duration).asSeconds();var _duration=moment.utc(seconds*1000).format('mm:ss');var _videoId=(id===null||id===void 0?void 0:id.videoId)||(contentDetails===null||contentDetails===void 0?void 0:contentDetails.videoId)||id;var history=useHistory();useEffect(function(){var get_video_details=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$request,items;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return request('/videos',{params:{part:'contentDetails,statistics',id:_videoId}});case 2:_yield$request=_context.sent;items=_yield$request.data.items;setDuration(items[0].contentDetails.duration);setViews(items[0].statistics.viewCount);case 6:case\"end\":return _context.stop();}}},_callee);}));return function get_video_details(){return _ref2.apply(this,arguments);};}();get_video_details();},[_videoId]);useEffect(function(){var get_channel_icon=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _yield$request2,items;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return request('/channels',{params:{part:'snippet',id:channelId}});case 2:_yield$request2=_context2.sent;items=_yield$request2.data.items;setChannelIcon(items[0].snippet.thumbnails.default);case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function get_channel_icon(){return _ref3.apply(this,arguments);};}();get_channel_icon();},[channelId]);var handleVideoClick=function handleVideoClick(){history.push(\"/watch/\".concat(_videoId));};return/*#__PURE__*/_jsxs(\"div\",{className:\"video\",onClick:handleVideoClick,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"video__top\",children:[/*#__PURE__*/_jsx(LazyLoadImage,{src:medium.url,effect:\"blur\"}),/*#__PURE__*/_jsx(\"span\",{className:\"video__top__duration\",children:_duration})]}),/*#__PURE__*/_jsx(\"div\",{className:\"video__title\",children:title}),/*#__PURE__*/_jsxs(\"div\",{className:\"video__details\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(AiFillEye,{}),\" \",numeral(views).format('0.a'),\" Views \\u2022\",' ']}),' ',/*#__PURE__*/_jsxs(\"span\",{children:[\" \",moment(publishedAt).fromNow(),\" \"]})]}),!channelScreen&&/*#__PURE__*/_jsxs(\"div\",{className:\"video__channel\",children:[/*#__PURE__*/_jsx(LazyLoadImage,{src:channelIcon===null||channelIcon===void 0?void 0:channelIcon.url,effect:\"blur\"}),/*#__PURE__*/_jsx(\"p\",{children:channelTitle})]})]});};export default Video;","map":{"version":3,"sources":["/Users/uchennaibe/Desktop/youtube/src/components/video/Video.js"],"names":["React","useEffect","useState","AiFillEye","request","moment","numeral","LazyLoadImage","useHistory","Video","video","channelScreen","id","snippet","channelId","channelTitle","title","publishedAt","medium","thumbnails","contentDetails","views","setViews","duration","setDuration","channelIcon","setChannelIcon","seconds","asSeconds","_duration","utc","format","_videoId","videoId","history","get_video_details","params","part","items","data","statistics","viewCount","get_channel_icon","default","handleVideoClick","push","url","fromNow"],"mappings":"6hBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAO,eAAP,CAEA,OAASC,SAAT,KAA0B,gBAA1B,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,SAApB,CACA,OAASC,aAAT,KAA8B,iCAA9B,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAA8B,IAA3BC,CAAAA,KAA2B,MAA3BA,KAA2B,CAApBC,aAAoB,MAApBA,aAAoB,IAEtCC,CAAAA,EAFsC,CAWrCF,KAXqC,CAEtCE,EAFsC,gBAWrCF,KAXqC,CAGtCG,OAHsC,CAInCC,SAJmC,gBAInCA,SAJmC,CAKnCC,YALmC,gBAKnCA,YALmC,CAMnCC,KANmC,gBAMnCA,KANmC,CAOnCC,WAPmC,gBAOnCA,WAPmC,CAQrBC,MARqB,gBAQnCC,UARmC,CAQrBD,MARqB,CAUtCE,cAVsC,CAWrCV,KAXqC,CAUtCU,cAVsC,eAaflB,QAAQ,CAAC,IAAD,CAbO,wCAalCmB,KAbkC,eAa3BC,QAb2B,8BAcTpB,QAAQ,CAAC,IAAD,CAdC,yCAclCqB,QAdkC,eAcxBC,WAdwB,8BAeHtB,QAAQ,CAAC,IAAD,CAfL,yCAelCuB,WAfkC,eAerBC,cAfqB,eAiBzC,GAAMC,CAAAA,OAAO,CAAGtB,MAAM,CAACkB,QAAP,CAAgBA,QAAhB,EAA0BK,SAA1B,EAAhB,CACA,GAAMC,CAAAA,SAAS,CAAGxB,MAAM,CAACyB,GAAP,CAAWH,OAAO,CAAG,IAArB,EAA2BI,MAA3B,CAAkC,OAAlC,CAAlB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,CAAApB,EAAE,OAAF,EAAAA,EAAE,SAAF,QAAAA,EAAE,CAAEqB,OAAJ,IAAeb,cAAf,SAAeA,cAAf,iBAAeA,cAAc,CAAEa,OAA/B,GAA0CrB,EAA3D,CAEA,GAAMsB,CAAAA,OAAO,CAAG1B,UAAU,EAA1B,CAEAP,SAAS,CAAC,UAAM,CACb,GAAMkC,CAAAA,iBAAiB,2FAAG,kLAGb/B,CAAAA,OAAO,CAAC,SAAD,CAAY,CAC1BgC,MAAM,CAAE,CACLC,IAAI,CAAE,2BADD,CAELzB,EAAE,CAAEoB,QAFC,CADkB,CAAZ,CAHM,qCAEZM,KAFY,gBAEpBC,IAFoB,CAEZD,KAFY,CASvBd,WAAW,CAACc,KAAK,CAAC,CAAD,CAAL,CAASlB,cAAT,CAAwBG,QAAzB,CAAX,CACAD,QAAQ,CAACgB,KAAK,CAAC,CAAD,CAAL,CAASE,UAAT,CAAoBC,SAArB,CAAR,CAVuB,sDAAH,kBAAjBN,CAAAA,iBAAiB,2CAAvB,CAYAA,iBAAiB,GACnB,CAdQ,CAcN,CAACH,QAAD,CAdM,CAAT,CAgBA/B,SAAS,CAAC,UAAM,CACb,GAAMyC,CAAAA,gBAAgB,2FAAG,yLAGZtC,CAAAA,OAAO,CAAC,WAAD,CAAc,CAC5BgC,MAAM,CAAE,CACLC,IAAI,CAAE,SADD,CAELzB,EAAE,CAAEE,SAFC,CADoB,CAAd,CAHK,uCAEXwB,KAFW,iBAEnBC,IAFmB,CAEXD,KAFW,CAStBZ,cAAc,CAACY,KAAK,CAAC,CAAD,CAAL,CAASzB,OAAT,CAAiBM,UAAjB,CAA4BwB,OAA7B,CAAd,CATsB,wDAAH,kBAAhBD,CAAAA,gBAAgB,2CAAtB,CAWAA,gBAAgB,GAClB,CAbQ,CAaN,CAAC5B,SAAD,CAbM,CAAT,CAeA,GAAM8B,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC5BV,OAAO,CAACW,IAAR,kBAAuBb,QAAvB,GACF,CAFD,CAIA,mBACG,aAAK,SAAS,CAAC,OAAf,CAAuB,OAAO,CAAEY,gBAAhC,wBACG,aAAK,SAAS,CAAC,YAAf,wBAEG,KAAC,aAAD,EAAe,GAAG,CAAE1B,MAAM,CAAC4B,GAA3B,CAAgC,MAAM,CAAC,MAAvC,EAFH,cAGG,aAAM,SAAS,CAAC,sBAAhB,UAAwCjB,SAAxC,EAHH,GADH,cAMG,YAAK,SAAS,CAAC,cAAf,UAA+Bb,KAA/B,EANH,cAOG,aAAK,SAAS,CAAC,gBAAf,wBACG,qCACG,KAAC,SAAD,IADH,KACkBV,OAAO,CAACe,KAAD,CAAP,CAAeU,MAAf,CAAsB,KAAtB,CADlB,iBACwD,GADxD,GADH,CAGW,GAHX,cAIG,4BAAQ1B,MAAM,CAACY,WAAD,CAAN,CAAoB8B,OAApB,EAAR,OAJH,GAPH,CAaI,CAACpC,aAAD,eACE,aAAK,SAAS,CAAC,gBAAf,wBACG,KAAC,aAAD,EAAe,GAAG,CAAEc,WAAF,SAAEA,WAAF,iBAAEA,WAAW,CAAEqB,GAAjC,CAAsC,MAAM,CAAC,MAA7C,EADH,cAGG,mBAAI/B,YAAJ,EAHH,GAdN,GADH,CAuBF,CAlFD,CAoFA,cAAeN,CAAAA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './_video.scss'\n\nimport { AiFillEye } from 'react-icons/ai'\nimport request from '../../api'\n\nimport moment from 'moment'\nimport numeral from 'numeral'\nimport { LazyLoadImage } from 'react-lazy-load-image-component'\nimport { useHistory } from 'react-router-dom'\nconst Video = ({ video, channelScreen }) => {\n   const {\n      id,\n      snippet: {\n         channelId,\n         channelTitle,\n         title,\n         publishedAt,\n         thumbnails: { medium },\n      },\n      contentDetails,\n   } = video\n\n   const [views, setViews] = useState(null)\n   const [duration, setDuration] = useState(null)\n   const [channelIcon, setChannelIcon] = useState(null)\n\n   const seconds = moment.duration(duration).asSeconds()\n   const _duration = moment.utc(seconds * 1000).format('mm:ss')\n\n   const _videoId = id?.videoId || contentDetails?.videoId || id\n\n   const history = useHistory()\n\n   useEffect(() => {\n      const get_video_details = async () => {\n         const {\n            data: { items },\n         } = await request('/videos', {\n            params: {\n               part: 'contentDetails,statistics',\n               id: _videoId,\n            },\n         })\n         setDuration(items[0].contentDetails.duration)\n         setViews(items[0].statistics.viewCount)\n      }\n      get_video_details()\n   }, [_videoId])\n\n   useEffect(() => {\n      const get_channel_icon = async () => {\n         const {\n            data: { items },\n         } = await request('/channels', {\n            params: {\n               part: 'snippet',\n               id: channelId,\n            },\n         })\n         setChannelIcon(items[0].snippet.thumbnails.default)\n      }\n      get_channel_icon()\n   }, [channelId])\n\n   const handleVideoClick = () => {\n      history.push(`/watch/${_videoId}`)\n   }\n\n   return (\n      <div className='video' onClick={handleVideoClick}>\n         <div className='video__top'>\n            {/* <img src={medium.url} alt='' /> */}\n            <LazyLoadImage src={medium.url} effect='blur' />\n            <span className='video__top__duration'>{_duration}</span>\n         </div>\n         <div className='video__title'>{title}</div>\n         <div className='video__details'>\n            <span>\n               <AiFillEye /> {numeral(views).format('0.a')} Views •{' '}\n            </span>{' '}\n            <span> {moment(publishedAt).fromNow()} </span>\n         </div>\n         {!channelScreen && (\n            <div className='video__channel'>\n               <LazyLoadImage src={channelIcon?.url} effect='blur' />\n\n               <p>{channelTitle}</p>\n            </div>\n         )}\n      </div>\n   )\n}\n\nexport default Video\n"]},"metadata":{},"sourceType":"module"}