{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/uchennaibe/Desktop/youtube/src/screens/channelScreen/ChannelScreen.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport Video from '../../components/video/Video';\nimport { getChannelDetails } from '../../redux/actions/channel.action';\nimport { getVideosByChannel } from '../../redux/actions/videos.action';\nimport numeral from 'numeral';\nimport './channelScreen.scss';\n\nconst ChannelScreen = () => {\n  _s();\n\n  var _snippet$thumbnails, _snippet$thumbnails$d;\n\n  const {\n    channelId\n  } = useParams();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getVideosByChannel(channelId));\n    dispatch(getChannelDetails(channelId));\n  }, [dispatch, channelId]);\n  const {\n    videos,\n    loading\n  } = useSelector(state => state.channelVideos);\n  const {\n    snippet,\n    statistics\n  } = useSelector(state => state.channelDetails.channel);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-5 py-2 my-2 d-flex justify-content-between align-items-center channelHeader\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: snippet === null || snippet === void 0 ? void 0 : (_snippet$thumbnails = snippet.thumbnails) === null || _snippet$thumbnails === void 0 ? void 0 : (_snippet$thumbnails$d = _snippet$thumbnails.default) === null || _snippet$thumbnails$d === void 0 ? void 0 : _snippet$thumbnails$d.url,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-3 channelHeader__details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: snippet === null || snippet === void 0 ? void 0 : snippet.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [numeral(statistics === null || statistics === void 0 ? void 0 : statistics.subscriberCount).format('0.a'), ' ', \"subscribers\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Subscribe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mt-2\",\n        children: !loading ? videos === null || videos === void 0 ? void 0 : videos.map(video => /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(Video, {\n            video: video,\n            channelScreen: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 24\n        }, this)) : [...Array(15)].map(() => /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(SkeletonTheme, {\n            color: \"#343a40\",\n            highlightColor: \"#3c4147\",\n            children: /*#__PURE__*/_jsxDEV(Skeleton, {\n              width: \"100%\",\n              height: \"140px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 24\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ChannelScreen, \"oyhUpq5F1mzF8KDkdZR9o8BygeY=\", false, function () {\n  return [useParams, useDispatch, useSelector, useSelector];\n});\n\n_c = ChannelScreen;\nexport default ChannelScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChannelScreen\");","map":{"version":3,"sources":["/Users/uchennaibe/Desktop/youtube/src/screens/channelScreen/ChannelScreen.js"],"names":["useEffect","Col","Container","Row","Skeleton","SkeletonTheme","useDispatch","useSelector","useParams","Video","getChannelDetails","getVideosByChannel","numeral","ChannelScreen","channelId","dispatch","videos","loading","state","channelVideos","snippet","statistics","channelDetails","channel","thumbnails","default","url","title","subscriberCount","format","map","video","Array"],"mappings":"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","sourcesContent":["import { useEffect } from 'react'\nimport { Col, Container, Row } from 'react-bootstrap'\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams } from 'react-router-dom'\nimport Video from '../../components/video/Video'\nimport { getChannelDetails } from '../../redux/actions/channel.action'\nimport { getVideosByChannel } from '../../redux/actions/videos.action'\n\nimport numeral from 'numeral'\n\nimport './channelScreen.scss'\n\nconst ChannelScreen = () => {\n   const { channelId } = useParams()\n\n   const dispatch = useDispatch()\n\n   useEffect(() => {\n      dispatch(getVideosByChannel(channelId))\n      dispatch(getChannelDetails(channelId))\n   }, [dispatch, channelId])\n\n   const { videos, loading } = useSelector(state => state.channelVideos)\n   const { snippet, statistics } = useSelector(\n      state => state.channelDetails.channel\n   )\n\n   return (\n      <>\n         <div className='px-5 py-2 my-2 d-flex justify-content-between align-items-center channelHeader'>\n            <div className='d-flex align-items-center'>\n               <img src={snippet?.thumbnails?.default?.url} alt='' />\n\n               <div className='ml-3 channelHeader__details'>\n                  <h3>{snippet?.title}</h3>\n                  <span>\n                     {numeral(statistics?.subscriberCount).format('0.a')}{' '}\n                     subscribers\n                  </span>\n               </div>\n            </div>\n\n            <button>Subscribe</button>\n         </div>\n\n         <Container>\n            <Row className='mt-2'>\n               {!loading\n                  ? videos?.map(video => (\n                       <Col md={3} lg={3}>\n                          <Video video={video} channelScreen />\n                       </Col>\n                    ))\n                  : [...Array(15)].map(() => (\n                       <Col md={3} lg={3}>\n                          <SkeletonTheme\n                             color='#343a40'\n                             highlightColor='#3c4147'>\n                             <Skeleton width='100%' height='140px' />\n                          </SkeletonTheme>\n                       </Col>\n                    ))}\n            </Row>\n         </Container>\n      </>\n   )\n}\n\nexport default ChannelScreen\n"]},"metadata":{},"sourceType":"module"}