{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/uchennaibe/Downloads/youtube-clone-react-redux/src/components/videoHorizontal/VideoHorizontal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './_videoHorizontal.scss';\nimport { AiFillEye } from 'react-icons/ai';\nimport request from '../../api';\nimport moment from 'moment';\nimport numeral from 'numeral';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport { Col, Row } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\n\nconst VideoHorizontal = ({\n  video,\n  searchScreen,\n  subScreen\n}) => {\n  _s();\n\n  const {\n    id,\n    snippet: {\n      channelId,\n      channelTitle,\n      description,\n      title,\n      publishedAt,\n      thumbnails: {\n        medium\n      },\n      resourceId\n    }\n  } = video;\n  const isVideo = !(id.kind === 'youtube#channel' || subScreen);\n  const [views, setViews] = useState(null);\n  const [duration, setDuration] = useState(null);\n  const [channelIcon, setChannelIcon] = useState(null);\n  useEffect(() => {\n    const get_video_details = async () => {\n      const {\n        data: {\n          items\n        }\n      } = await request('/videos', {\n        params: {\n          part: 'contentDetails,statistics',\n          id: id.videoId\n        }\n      });\n      setDuration(items[0].contentDetails.duration);\n      setViews(items[0].statistics.viewCount);\n    };\n\n    if (isVideo) get_video_details();\n  }, [id, isVideo]);\n  useEffect(() => {\n    const get_channel_icon = async () => {\n      const {\n        data: {\n          items\n        }\n      } = await request('/channels', {\n        params: {\n          part: 'snippet',\n          id: channelId\n        }\n      });\n      setChannelIcon(items[0].snippet.thumbnails.default);\n    };\n\n    get_channel_icon();\n  }, [channelId]);\n  const seconds = moment.duration(duration).asSeconds();\n\n  const _duration = moment.utc(seconds * 1000).format('mm:ss');\n\n  const history = useHistory();\n\n  const _channelId = (resourceId === null || resourceId === void 0 ? void 0 : resourceId.channelId) || channelId;\n\n  const handleClick = () => {\n    isVideo ? history.push(`/watch/${id.videoId}`) : history.push(`/channel/${_channelId}`);\n  };\n\n  const thumbnail = !isVideo && 'videoHorizontal__thumbnail-channel';\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"py-2 m-1 videoHorizontal align-items-center\",\n    onClick: handleClick,\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      xs: 6,\n      md: searchScreen || subScreen ? 4 : 6,\n      className: \"videoHorizontal__left\",\n      children: [/*#__PURE__*/_jsxDEV(LazyLoadImage, {\n        src: medium.url,\n        effect: \"blur\",\n        className: `videoHorizontal__thumbnail ${thumbnail} `,\n        wrapperClassName: \"videoHorizontal__thumbnail-wrapper\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), isVideo && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"videoHorizontal__duration\",\n        children: _duration\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      xs: 6,\n      md: searchScreen || subScreen ? 8 : 6,\n      className: \"p-0 videoHorizontal__right\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-1 videoHorizontal__title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), isVideo && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"videoHorizontal__details\",\n        children: [/*#__PURE__*/_jsxDEV(AiFillEye, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 19\n        }, this), \" \", numeral(views).format('0.a'), \" Views \\u2022\", moment(publishedAt).fromNow()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 16\n      }, this), (searchScreen || subScreen) && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-1 videoHorizontal__desc\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-1 videoHorizontal__channel d-flex align-items-center\",\n        children: [isVideo && /*#__PURE__*/_jsxDEV(LazyLoadImage, {\n          src: channelIcon === null || channelIcon === void 0 ? void 0 : channelIcon.url,\n          effect: \"blur\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-0\",\n          children: channelTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), subScreen && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-2\",\n        children: [video.contentDetails.totalItemCount, \" Videos\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 7\n  }, this);\n};\n\n_s(VideoHorizontal, \"X0ZaqerSf5tYejeQZK0axDaNuPE=\", false, function () {\n  return [useHistory];\n});\n\n_c = VideoHorizontal;\nexport default VideoHorizontal;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoHorizontal\");","map":{"version":3,"sources":["/Users/uchennaibe/Downloads/youtube-clone-react-redux/src/components/videoHorizontal/VideoHorizontal.js"],"names":["React","useEffect","useState","AiFillEye","request","moment","numeral","LazyLoadImage","Col","Row","useHistory","VideoHorizontal","video","searchScreen","subScreen","id","snippet","channelId","channelTitle","description","title","publishedAt","thumbnails","medium","resourceId","isVideo","kind","views","setViews","duration","setDuration","channelIcon","setChannelIcon","get_video_details","data","items","params","part","videoId","contentDetails","statistics","viewCount","get_channel_icon","default","seconds","asSeconds","_duration","utc","format","history","_channelId","handleClick","push","thumbnail","url","fromNow","totalItemCount"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './_videoHorizontal.scss'\n\nimport { AiFillEye } from 'react-icons/ai'\nimport request from '../../api'\n\nimport moment from 'moment'\nimport numeral from 'numeral'\nimport { LazyLoadImage } from 'react-lazy-load-image-component'\nimport { Col, Row } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\n\nconst VideoHorizontal = ({ video, searchScreen, subScreen }) => {\n   const {\n      id,\n      snippet: {\n         channelId,\n         channelTitle,\n         description,\n         title,\n         publishedAt,\n         thumbnails: { medium },\n         resourceId,\n      },\n   } = video\n\n   const isVideo = !(id.kind === 'youtube#channel' || subScreen)\n\n   const [views, setViews] = useState(null)\n   const [duration, setDuration] = useState(null)\n   const [channelIcon, setChannelIcon] = useState(null)\n\n   useEffect(() => {\n      const get_video_details = async () => {\n         const {\n            data: { items },\n         } = await request('/videos', {\n            params: {\n               part: 'contentDetails,statistics',\n               id: id.videoId,\n            },\n         })\n         setDuration(items[0].contentDetails.duration)\n         setViews(items[0].statistics.viewCount)\n      }\n      if (isVideo) get_video_details()\n   }, [id, isVideo])\n\n   useEffect(() => {\n      const get_channel_icon = async () => {\n         const {\n            data: { items },\n         } = await request('/channels', {\n            params: {\n               part: 'snippet',\n               id: channelId,\n            },\n         })\n         setChannelIcon(items[0].snippet.thumbnails.default)\n      }\n      get_channel_icon()\n   }, [channelId])\n\n   const seconds = moment.duration(duration).asSeconds()\n   const _duration = moment.utc(seconds * 1000).format('mm:ss')\n\n   const history = useHistory()\n\n   const _channelId = resourceId?.channelId || channelId\n\n   const handleClick = () => {\n      isVideo\n         ? history.push(`/watch/${id.videoId}`)\n         : history.push(`/channel/${_channelId}`)\n   }\n\n   const thumbnail = !isVideo && 'videoHorizontal__thumbnail-channel'\n\n   return (\n      <Row\n         className='py-2 m-1 videoHorizontal align-items-center'\n         onClick={handleClick}>\n         {/* //TODO refractor grid */}\n         <Col\n            xs={6}\n            md={searchScreen || subScreen ? 4 : 6}\n            className='videoHorizontal__left'>\n            <LazyLoadImage\n               src={medium.url}\n               effect='blur'\n               className={`videoHorizontal__thumbnail ${thumbnail} `}\n               wrapperClassName='videoHorizontal__thumbnail-wrapper'\n            />\n            {isVideo && (\n               <span className='videoHorizontal__duration'>{_duration}</span>\n            )}\n         </Col>\n         <Col\n            xs={6}\n            md={searchScreen || subScreen ? 8 : 6}\n            className='p-0 videoHorizontal__right'>\n            <p className='mb-1 videoHorizontal__title'>{title}</p>\n\n            {isVideo && (\n               <div className='videoHorizontal__details'>\n                  <AiFillEye /> {numeral(views).format('0.a')} Views •\n                  {moment(publishedAt).fromNow()}\n               </div>\n            )}\n\n            {(searchScreen || subScreen) && (\n               <p className='mt-1 videoHorizontal__desc'>{description}</p>\n            )}\n\n            <div className='my-1 videoHorizontal__channel d-flex align-items-center'>\n               {isVideo && (\n                  <LazyLoadImage src={channelIcon?.url} effect='blur' />\n               )}\n               <p className='mb-0'>{channelTitle}</p>\n            </div>\n            {subScreen && (\n               <p className='mt-2'>\n                  {video.contentDetails.totalItemCount} Videos\n               </p>\n            )}\n         </Col>\n      </Row>\n   )\n}\n\nexport default VideoHorizontal\n"]},"metadata":{},"sourceType":"module"}