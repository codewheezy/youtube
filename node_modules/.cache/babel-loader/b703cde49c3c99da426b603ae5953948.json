{"ast":null,"code":"import _regeneratorRuntime from\"/Users/uchennaibe/Desktop/youtube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/uchennaibe/Desktop/youtube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import request from'../../api';import{COMMENT_LIST_FAIL,COMMENT_LIST_REQUEST,COMMENT_LIST_SUCCESS,CREATE_COMMENT_FAIL,CREATE_COMMENT_SUCCESS}from'../actionType';export var getCommentsOfVideoById=function getCommentsOfVideoById(id){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var _yield$request,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;dispatch({type:COMMENT_LIST_REQUEST});_context.next=4;return request('/commentThreads',{params:{part:'snippet',videoId:id}});case 4:_yield$request=_context.sent;data=_yield$request.data;dispatch({type:COMMENT_LIST_SUCCESS,payload:data.items});_context.next=13;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);console.log(_context.t0.response.data);dispatch({type:COMMENT_LIST_FAIL,payload:_context.t0.response.data.message});case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var addComment=function addComment(id,text){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch,getState){var obj;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;obj={snippet:{videoId:id,topLevelComment:{snippet:{textOriginal:text}}}};_context2.next=4;return request.post('/commentThreads',obj,{params:{part:'snippet'},headers:{Authorization:\"Bearer \".concat(getState().auth.accessToken)}});case 4:dispatch({type:CREATE_COMMENT_SUCCESS});setTimeout(function(){return dispatch(getCommentsOfVideoById(id));},3000);_context2.next=12;break;case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0.response.data);dispatch({type:CREATE_COMMENT_FAIL,payload:_context2.t0.response.data.message});case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[0,8]]);}));return function(_x2,_x3){return _ref2.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/uchennaibe/Desktop/youtube/src/redux/actions/comments.action.js"],"names":["request","COMMENT_LIST_FAIL","COMMENT_LIST_REQUEST","COMMENT_LIST_SUCCESS","CREATE_COMMENT_FAIL","CREATE_COMMENT_SUCCESS","getCommentsOfVideoById","id","dispatch","type","params","part","videoId","data","payload","items","console","log","response","message","addComment","text","getState","obj","snippet","topLevelComment","textOriginal","post","headers","Authorization","auth","accessToken","setTimeout"],"mappings":"6SAAA,MAAOA,CAAAA,OAAP,KAAoB,WAApB,CACA,OACGC,iBADH,CAEGC,oBAFH,CAGGC,oBAHH,CAIGC,mBAJH,CAKGC,sBALH,KAMO,eANP,CAQA,MAAO,IAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAAAC,EAAE,iGAAI,iBAAMC,QAAN,0JAEtCA,QAAQ,CAAC,CACNC,IAAI,CAAEP,oBADA,CAAD,CAAR,CAFsC,sBAMfF,CAAAA,OAAO,CAAC,iBAAD,CAAoB,CAC/CU,MAAM,CAAE,CACLC,IAAI,CAAE,SADD,CAELC,OAAO,CAAEL,EAFJ,CADuC,CAApB,CANQ,qCAM9BM,IAN8B,gBAM9BA,IAN8B,CAYtCL,QAAQ,CAAC,CACNC,IAAI,CAAEN,oBADA,CAENW,OAAO,CAAED,IAAI,CAACE,KAFR,CAAD,CAAR,CAZsC,+EAiBtCC,OAAO,CAACC,GAAR,CAAY,YAAMC,QAAN,CAAeL,IAA3B,EACAL,QAAQ,CAAC,CACNC,IAAI,CAAER,iBADA,CAENa,OAAO,CAAE,YAAMI,QAAN,CAAeL,IAAf,CAAoBM,OAFvB,CAAD,CAAR,CAlBsC,oEAAJ,gEAAjC,CAyBP,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACb,EAAD,CAAKc,IAAL,kGAAc,kBAAOb,QAAP,CAAiBc,QAAjB,+IAE5BC,GAF4B,CAEtB,CACTC,OAAO,CAAE,CACNZ,OAAO,CAAEL,EADH,CAENkB,eAAe,CAAE,CACdD,OAAO,CAAE,CACNE,YAAY,CAAEL,IADR,CADK,CAFX,CADA,CAFsB,wBAa5BrB,CAAAA,OAAO,CAAC2B,IAAR,CAAa,iBAAb,CAAgCJ,GAAhC,CAAqC,CACxCb,MAAM,CAAE,CACLC,IAAI,CAAE,SADD,CADgC,CAIxCiB,OAAO,CAAE,CACNC,aAAa,kBAAYP,QAAQ,GAAGQ,IAAX,CAAgBC,WAA5B,CADP,CAJ+B,CAArC,CAb4B,QAqBlCvB,QAAQ,CAAC,CACNC,IAAI,CAAEJ,sBADA,CAAD,CAAR,CAIA2B,UAAU,CAAC,iBAAMxB,CAAAA,QAAQ,CAACF,sBAAsB,CAACC,EAAD,CAAvB,CAAd,EAAD,CAA6C,IAA7C,CAAV,CAzBkC,mFA2BlCS,OAAO,CAACC,GAAR,CAAY,aAAMC,QAAN,CAAeL,IAA3B,EACAL,QAAQ,CAAC,CACNC,IAAI,CAAEL,mBADA,CAENU,OAAO,CAAE,aAAMI,QAAN,CAAeL,IAAf,CAAoBM,OAFvB,CAAD,CAAR,CA5BkC,sEAAd,sEAAnB","sourcesContent":["import request from '../../api'\nimport {\n   COMMENT_LIST_FAIL,\n   COMMENT_LIST_REQUEST,\n   COMMENT_LIST_SUCCESS,\n   CREATE_COMMENT_FAIL,\n   CREATE_COMMENT_SUCCESS,\n} from '../actionType'\n\nexport const getCommentsOfVideoById = id => async dispatch => {\n   try {\n      dispatch({\n         type: COMMENT_LIST_REQUEST,\n      })\n\n      const { data } = await request('/commentThreads', {\n         params: {\n            part: 'snippet',\n            videoId: id,\n         },\n      })\n      dispatch({\n         type: COMMENT_LIST_SUCCESS,\n         payload: data.items,\n      })\n   } catch (error) {\n      console.log(error.response.data)\n      dispatch({\n         type: COMMENT_LIST_FAIL,\n         payload: error.response.data.message,\n      })\n   }\n}\n\nexport const addComment = (id, text) => async (dispatch, getState) => {\n   try {\n      const obj = {\n         snippet: {\n            videoId: id,\n            topLevelComment: {\n               snippet: {\n                  textOriginal: text,\n               },\n            },\n         },\n      }\n\n      await request.post('/commentThreads', obj, {\n         params: {\n            part: 'snippet',\n         },\n         headers: {\n            Authorization: `Bearer ${getState().auth.accessToken}`,\n         },\n      })\n      dispatch({\n         type: CREATE_COMMENT_SUCCESS,\n      })\n\n      setTimeout(() => dispatch(getCommentsOfVideoById(id)), 3000)\n   } catch (error) {\n      console.log(error.response.data)\n      dispatch({\n         type: CREATE_COMMENT_FAIL,\n         payload: error.response.data.message,\n      })\n   }\n}\n"]},"metadata":{},"sourceType":"module"}