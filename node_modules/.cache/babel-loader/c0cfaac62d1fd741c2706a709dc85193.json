{"ast":null,"code":"import _regeneratorRuntime from\"/Users/uchennaibe/Desktop/youtube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/uchennaibe/Desktop/youtube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import request from'../../api';import{CHANNEL_DETAILS_FAIL,CHANNEL_DETAILS_REQUEST,CHANNEL_DETAILS_SUCCESS,SET_SUBSCRIPTION_STATUS}from'../actionType';export var getChannelDetails=function getChannelDetails(id){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var _yield$request,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;dispatch({type:CHANNEL_DETAILS_REQUEST});_context.next=4;return request('/channels',{params:{part:'snippet,statistics,contentDetails',id:id}});case 4:_yield$request=_context.sent;data=_yield$request.data;dispatch({type:CHANNEL_DETAILS_SUCCESS,payload:data.items[0]});_context.next=13;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);console.log(_context.t0.response.data);dispatch({type:CHANNEL_DETAILS_FAIL,payload:_context.t0.response.data});case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var checkSubscriptionStatus=function checkSubscriptionStatus(id){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch,getState){var _yield$request2,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return request('/subscriptions',{params:{part:'snippet',forChannelId:id,mine:true},headers:{Authorization:\"Bearer \".concat(getState().auth.accessToken)}});case 3:_yield$request2=_context2.sent;data=_yield$request2.data;dispatch({type:SET_SUBSCRIPTION_STATUS,payload:data.items.length!==0});console.log(data);_context2.next=12;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0.response.data);case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[0,9]]);}));return function(_x2,_x3){return _ref2.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/uchennaibe/Desktop/youtube/src/redux/actions/channel.action.js"],"names":["request","CHANNEL_DETAILS_FAIL","CHANNEL_DETAILS_REQUEST","CHANNEL_DETAILS_SUCCESS","SET_SUBSCRIPTION_STATUS","getChannelDetails","id","dispatch","type","params","part","data","payload","items","console","log","response","checkSubscriptionStatus","getState","forChannelId","mine","headers","Authorization","auth","accessToken","length"],"mappings":"6SAAA,MAAOA,CAAAA,OAAP,KAAoB,WAApB,CACA,OACGC,oBADH,CAEGC,uBAFH,CAGGC,uBAHH,CAIGC,uBAJH,KAKO,eALP,CAOA,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAAC,EAAE,iGAAI,iBAAMC,QAAN,0JAEjCA,QAAQ,CAAC,CACNC,IAAI,CAAEN,uBADA,CAAD,CAAR,CAFiC,sBAMVF,CAAAA,OAAO,CAAC,WAAD,CAAc,CACzCS,MAAM,CAAE,CACLC,IAAI,CAAE,mCADD,CAELJ,EAAE,CAAFA,EAFK,CADiC,CAAd,CANG,qCAMzBK,IANyB,gBAMzBA,IANyB,CAYjCJ,QAAQ,CAAC,CACNC,IAAI,CAAEL,uBADA,CAENS,OAAO,CAAED,IAAI,CAACE,KAAL,CAAW,CAAX,CAFH,CAAD,CAAR,CAZiC,+EAiBjCC,OAAO,CAACC,GAAR,CAAY,YAAMC,QAAN,CAAeL,IAA3B,EACAJ,QAAQ,CAAC,CACNC,IAAI,CAAEP,oBADA,CAENW,OAAO,CAAE,YAAMI,QAAN,CAAeL,IAFlB,CAAD,CAAR,CAlBiC,oEAAJ,gEAA5B,CAyBP,MAAO,IAAMM,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAAAX,EAAE,kGAAI,kBAAOC,QAAP,CAAiBW,QAAjB,uLAEhBlB,CAAAA,OAAO,CAAC,gBAAD,CAAmB,CAC9CS,MAAM,CAAE,CACLC,IAAI,CAAE,SADD,CAELS,YAAY,CAAEb,EAFT,CAGLc,IAAI,CAAE,IAHD,CADsC,CAM9CC,OAAO,CAAE,CACNC,aAAa,kBAAYJ,QAAQ,GAAGK,IAAX,CAAgBC,WAA5B,CADP,CANqC,CAAnB,CAFS,uCAE/Bb,IAF+B,iBAE/BA,IAF+B,CAYvCJ,QAAQ,CAAC,CACNC,IAAI,CAAEJ,uBADA,CAENQ,OAAO,CAAED,IAAI,CAACE,KAAL,CAAWY,MAAX,GAAsB,CAFzB,CAAD,CAAR,CAIAX,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAhBuC,mFAkBvCG,OAAO,CAACC,GAAR,CAAY,aAAMC,QAAN,CAAeL,IAA3B,EAlBuC,sEAAJ,sEAAlC","sourcesContent":["import request from '../../api'\nimport {\n   CHANNEL_DETAILS_FAIL,\n   CHANNEL_DETAILS_REQUEST,\n   CHANNEL_DETAILS_SUCCESS,\n   SET_SUBSCRIPTION_STATUS,\n} from '../actionType'\n\nexport const getChannelDetails = id => async dispatch => {\n   try {\n      dispatch({\n         type: CHANNEL_DETAILS_REQUEST,\n      })\n\n      const { data } = await request('/channels', {\n         params: {\n            part: 'snippet,statistics,contentDetails',\n            id,\n         },\n      })\n      dispatch({\n         type: CHANNEL_DETAILS_SUCCESS,\n         payload: data.items[0],\n      })\n   } catch (error) {\n      console.log(error.response.data)\n      dispatch({\n         type: CHANNEL_DETAILS_FAIL,\n         payload: error.response.data,\n      })\n   }\n}\n\nexport const checkSubscriptionStatus = id => async (dispatch, getState) => {\n   try {\n      const { data } = await request('/subscriptions', {\n         params: {\n            part: 'snippet',\n            forChannelId: id,\n            mine: true,\n         },\n         headers: {\n            Authorization: `Bearer ${getState().auth.accessToken}`,\n         },\n      })\n      dispatch({\n         type: SET_SUBSCRIPTION_STATUS,\n         payload: data.items.length !== 0,\n      })\n      console.log(data)\n   } catch (error) {\n      console.log(error.response.data)\n   }\n}\n"]},"metadata":{},"sourceType":"module"}