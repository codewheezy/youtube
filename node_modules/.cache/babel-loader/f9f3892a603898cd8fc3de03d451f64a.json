{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useEffect}from'react';import{Container}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import{useParams}from'react-router-dom';import{getVideosBySearch}from'../redux/actions/videos.action';import VideoHorizontal from'../components/videoHorizontal/VideoHorizontal';import Skeleton,{SkeletonTheme}from'react-loading-skeleton';var SearchScreen=function SearchScreen(){var _useParams=useParams(),query=_useParams.query;var dispatch=useDispatch();useEffect(function(){dispatch(getVideosBySearch(query));},[query,dispatch]);var _useSelector=useSelector(function(state){return state.searchedVideos;}),videos=_useSelector.videos,loading=_useSelector.loading;return/*#__PURE__*/_jsx(Container,{children:!loading?videos===null||videos===void 0?void 0:videos.map(function(video){return/*#__PURE__*/_jsx(VideoHorizontal,{video:video,searchScreen:true},video.id.videoId);}):/*#__PURE__*/_jsx(SkeletonTheme,{color:\"#343a40\",highlightColor:\"#3c4147\",children:/*#__PURE__*/_jsx(Skeleton,{width:\"100%\",height:\"160px\",count:20})})});};export default SearchScreen;","map":{"version":3,"sources":["/Users/uchennaibe/Desktop/youtube/src/screens/SearchScreen.js"],"names":["React","useEffect","Container","useDispatch","useSelector","useParams","getVideosBySearch","VideoHorizontal","Skeleton","SkeletonTheme","SearchScreen","query","dispatch","state","searchedVideos","videos","loading","map","video","id","videoId"],"mappings":"2CAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,SAAT,KAA0B,iBAA1B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,SAAT,KAA0B,kBAA1B,CACA,OAASC,iBAAT,KAAkC,gCAAlC,CACA,MAAOC,CAAAA,eAAP,KAA4B,+CAA5B,CACA,MAAOC,CAAAA,QAAP,EAAmBC,aAAnB,KAAwC,wBAAxC,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,gBACNL,SAAS,EADH,CAChBM,KADgB,YAChBA,KADgB,CAGxB,GAAMC,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CAEAF,SAAS,CAAC,UAAM,CACbW,QAAQ,CAACN,iBAAiB,CAACK,KAAD,CAAlB,CAAR,CACF,CAFQ,CAEN,CAACA,KAAD,CAAQC,QAAR,CAFM,CAAT,CALwB,iBASIR,WAAW,CAAC,SAAAS,KAAK,QAAIA,CAAAA,KAAK,CAACC,cAAV,EAAN,CATf,CAShBC,MATgB,cAShBA,MATgB,CASRC,OATQ,cASRA,OATQ,CAWxB,mBACG,KAAC,SAAD,WACI,CAACA,OAAD,CACED,MADF,SACEA,MADF,iBACEA,MAAM,CAAEE,GAAR,CAAY,SAAAC,KAAK,qBACd,KAAC,eAAD,EACG,KAAK,CAAEA,KADV,CAGG,YAAY,KAHf,EAEQA,KAAK,CAACC,EAAN,CAASC,OAFjB,CADc,EAAjB,CADF,cASE,KAAC,aAAD,EAAe,KAAK,CAAC,SAArB,CAA+B,cAAc,CAAC,SAA9C,uBACG,KAAC,QAAD,EAAU,KAAK,CAAC,MAAhB,CAAuB,MAAM,CAAC,OAA9B,CAAsC,KAAK,CAAE,EAA7C,EADH,EAVN,EADH,CAiBF,CA5BD,CA8BA,cAAeV,CAAAA,YAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { Container } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams } from 'react-router-dom'\nimport { getVideosBySearch } from '../redux/actions/videos.action'\nimport VideoHorizontal from '../components/videoHorizontal/VideoHorizontal'\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton'\n\nconst SearchScreen = () => {\n   const { query } = useParams()\n\n   const dispatch = useDispatch()\n\n   useEffect(() => {\n      dispatch(getVideosBySearch(query))\n   }, [query, dispatch])\n\n   const { videos, loading } = useSelector(state => state.searchedVideos)\n\n   return (\n      <Container>\n         {!loading ? (\n            videos?.map(video => (\n               <VideoHorizontal\n                  video={video}\n                  key={video.id.videoId}\n                  searchScreen\n               />\n            ))\n         ) : (\n            <SkeletonTheme color='#343a40' highlightColor='#3c4147'>\n               <Skeleton width='100%' height='160px' count={20} />\n            </SkeletonTheme>\n         )}\n      </Container>\n   )\n}\n\nexport default SearchScreen\n"]},"metadata":{},"sourceType":"module"}